{"ast":null,"code":"var _jsxFileName = \"/Users/keyondre/Desktop/VS_Code/CapStone/Front-Capstone/front-end-capstone/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport pdfToText from 'react-pdftotext';\nimport { Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: acceptedFiles => {\n      console.log(acceptedFiles[0]);\n      if (acceptedFiles) {\n        pdfToText(acceptedFiles[0]).then(text => setUploadedFiles(text)).catch(error => console.error(\"Failed to extract text from pdf\"));\n      }\n      console.log(uploadedFiles);\n    }\n  });\n  //TO DO : Customize and Style this Drag and Drop to Upload box as you wantüßë‚Äçüíªüòä\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"is-valid\",\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      color: \"primary\",\n      size: \"lg\",\n      children: \"Drag and drop files here or click to browse.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"YUVBaZnyjcPRfpsSO/DeyLi+cz0=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useDropzone","pdfToText","Button","jsxDEV","_jsxDEV","FileUpload","_s","uploadedFiles","setUploadedFiles","getRootProps","getInputProps","onDrop","acceptedFiles","console","log","then","text","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","block","color","size","_c","$RefreshReg$"],"sources":["/Users/keyondre/Desktop/VS_Code/CapStone/Front-Capstone/front-end-capstone/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport pdfToText from 'react-pdftotext';\nimport { Button } from \"reactstrap\";\n\n\nconst FileUpload = () => {\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: (acceptedFiles) => {\n        console.log(acceptedFiles[0]);\n      if (acceptedFiles) {\n        pdfToText(acceptedFiles[0])\n          .then((text) => setUploadedFiles(text))\n          .catch((error) => console.error(\"Failed to extract text from pdf\"));\n      }\n      console.log(uploadedFiles);\n    },\n  });\n//TO DO : Customize and Style this Drag and Drop to Upload box as you wantüßë‚Äçüíªüòä\n  return (\n    <div {...getRootProps()}>\n        <h1>\n            File Upload\n        </h1>\n      <input className=\"is-valid\" {...getInputProps()} />\n      <Button block color=\"primary\" size=\"lg\">Drag and drop files here or click to browse.</Button>\n      {/* <ul> */}\n        {/* {uploadedFiles.map((file) => (\n          <li key={file.name}>{file.name}</li>\n        ))} */}\n        {/* <li>{uploadedFiles}</li> */}\n      {/* </ul> */}\n    </div>\n  );\n};\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEU,YAAY;IAAEC;EAAc,CAAC,GAAGV,WAAW,CAAC;IAClDW,MAAM,EAAGC,aAAa,IAAK;MACvBC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC,CAAC,CAAC,CAAC;MAC/B,IAAIA,aAAa,EAAE;QACjBX,SAAS,CAACW,aAAa,CAAC,CAAC,CAAC,CAAC,CACxBG,IAAI,CAAEC,IAAI,IAAKR,gBAAgB,CAACQ,IAAI,CAAC,CAAC,CACtCC,KAAK,CAAEC,KAAK,IAAKL,OAAO,CAACK,KAAK,CAAC,iCAAiC,CAAC,CAAC;MACvE;MACAL,OAAO,CAACC,GAAG,CAACP,aAAa,CAAC;IAC5B;EACF,CAAC,CAAC;EACJ;EACE,oBACEH,OAAA;IAAA,GAASK,YAAY,CAAC,CAAC;IAAAU,QAAA,gBACnBf,OAAA;MAAAe,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACPnB,OAAA;MAAOoB,SAAS,EAAC,UAAU;MAAA,GAAKd,aAAa,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnDnB,OAAA,CAACF,MAAM;MAACuB,KAAK;MAACC,KAAK,EAAC,SAAS;MAACC,IAAI,EAAC,IAAI;MAAAR,QAAA,EAAC;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAO1F,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7BID,UAAU;EAAA,QAE0BL,WAAW;AAAA;AAAA4B,EAAA,GAF/CvB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}